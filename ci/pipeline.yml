---
jobs:
- name: get-terraform
  public: true
  serial: true
  plan:
  - get: terraform-github-release
    trigger: true
  - task: download
    config:
      platform: linux
      inputs:
      - name: terraform-github-release
      outputs:
      - name: terraform
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
        - -c
        - |
          version=$(cat terraform-github-release/version)
          url="https://releases.hashicorp.com/terraform/${version}/terraform_${version}_linux_amd64.zip"
          wget --output terraform.zip "$url"
          unzip -d terraform terraform.zip
          chmod +x terraform/terraform
  - put: terraform-s3-release
    params: {file: terraform/terraform}

- name: get-cf-cli
  public: true
  serial: true
  plan:
  - get: cf-cli-github-release
    trigger: true
  - task: download
    config:
      platform: linux
      inputs:
      - name: cf-cli-github-release
      outputs:
      - name: cf
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
        - -c
        - |
          version=$(cat cf-cli-github-release/version)
          url="https://cli.run.pivotal.io/stable?release=linux64-binary&version=${version}&source=github-rel"
          wget --output cli.tgz "$url"
          tar -C cf -xzf cli.tgz
          chmod +x cf/cf
  - put: cf-cli-s3-release
    params: {file: cf/cf}

- name: build-pcfops-image
  public: true
  serial: true
  plan:
  - get: pcfops-docker-tag
    params: {bump: minor}
  # Download Dockerfile
  - get: pcfops-docker-release
    trigger: true
    params:
      include_source_tarball: true
  - task: extract
    config:
      platform: linux
      inputs:
      - name: pcfops-docker-release
      outputs:
      - name: source
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: tar
        args:
          - --extract
          - --gzip
          - --strip-components=1
          - --directory=source
          - --file=pcfops-docker-release/source.tar.gz
  # Download dependancies
  - get: terraform-s3-release
    trigger: true
    passed: [get-terraform]
  - get: cf-cli-s3-release
    trigger: true
    passed: [get-cf-cli]
  - get: jq-github-release
    trigger: true
    params:
      globs: [jq-linux64]
  # Copy dependancies
  - task: copy
    config:
      platform: linux
      inputs:
      - name: source
      - name: terraform-s3-release
      - name: cf-cli-s3-release
      - name: jq-github-release
      outputs:
      - name: source-with-deps
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
          - -c
          - |
            cp source/Dockerfile source-with-deps/Dockerfile
            cp terraform-s3-release/terraform source-with-deps/terraform
            cp cf-cli-s3-release/cf source-with-deps/cf
            cp jq-github-release/jq-linux64 source-with-deps/jq
  - put: pcfops-image
    params:
      build: source-with-deps
      tag: pcfops-docker-tag/version
  - put: pcfops-docker-tag
    params: {file: pcfops-docker-tag/version}

resources:
- name: pcfops-docker-tag
  type: semver
  source:
    driver: s3
    key: docker-tag
    bucket: pcf-docker-pipeline
    access_key_id: {{aws_access_key_id}}
    secret_access_key: {{aws_secret_access_key}}
    region_name: eu-west-1

- name: pcfops-docker-release
  type: github-release
  source:
    owner: EngineerBetter
    repository: pcfops-docker
    access_token: {{github_access_token}} # Avoids rate limits
- name: pcfops-image
  type: docker-image
  source:
    username: {{dockerhub_user}}
    password: {{dockerhub_password}}
    repository: engineerbetter/pcf-ops

- name: terraform-github-release
  type: github-release
  source:
    owner: hashicorp
    repository: terraform
    access_token: {{github_access_token}} # Avoids rate limits
- name: terraform-s3-release
  type: s3
  source:
    versioned_file: terraform/terraform
    bucket: pcf-docker-pipeline
    access_key_id: {{aws_access_key_id}}
    secret_access_key: {{aws_secret_access_key}}
    region_name: eu-west-1

- name: cf-cli-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cli
    access_token: {{github_access_token}} # Avoids rate limits
- name: cf-cli-s3-release
  type: s3
  source:
    versioned_file: cf/cf
    bucket: pcf-docker-pipeline
    access_key_id: {{aws_access_key_id}}
    secret_access_key: {{aws_secret_access_key}}
    region_name: eu-west-1

- name: jq-github-release
  type: github-release
  source:
    owner: stedolan
    repository: jq
    access_token: {{github_access_token}} # Avoids rate limits

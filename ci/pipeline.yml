---
jobs:
- name: get-kubectl
  public: true
  serial: true
  plan:
  - get: kubernetes-github-release
    trigger: true
  - task: download
    config:
      platform: linux
      inputs:
      - name: kubernetes-github-release
      outputs:
      - name: kubectl
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
        - -xc
        - |
          set -euo pipefail
          version=$(cat kubernetes-github-release/version)
          url="https://dl.k8s.io/v${version}/kubernetes-client-darwin-amd64.tar.gz"
          wget --output kubernetes-client.tar.gz "$url"
          tar -xf kubernetes-client.tar.gz
          cp kubernetes/client/bin/kubectl kubectl/
  - put: kubectl-s3-release
    params: {file: kubectl/kubectl}

- name: get-terraform
  public: true
  serial: true
  plan:
  - get: terraform-github-release
    trigger: true
  - task: download
    config:
      platform: linux
      inputs:
      - name: terraform-github-release
      outputs:
      - name: terraform
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
        - -c
        - |
          set -euo pipefail
          version=$(cat terraform-github-release/version)
          url="https://releases.hashicorp.com/terraform/${version}/terraform_${version}_linux_amd64.zip"
          wget --output terraform.zip "$url"
          unzip -d terraform terraform.zip
  - put: terraform-s3-release
    params: {file: terraform/terraform}

- name: get-cf-cli
  public: true
  serial: true
  plan:
  - get: cf-cli-github-release
    trigger: true
  - task: download
    config:
      platform: linux
      inputs:
      - name: cf-cli-github-release
      outputs:
      - name: cf
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
        - -c
        - |
          set -euo pipefail
          version=$(cat cf-cli-github-release/version)
          url="https://cli.run.pivotal.io/stable?release=linux64-binary&version=${version}&source=github-rel"
          wget --output cli.tgz "$url"
          tar -C cf -xzf cli.tgz
  - put: cf-cli-s3-release
    params: {file: cf/cf}

- name: get-aws-cli
  public: true
  serial: true
  plan:
  - get: aws-cli-git
    trigger: true
  - task: download
    config:
      platform: linux
      outputs:
      - name: aws-cli
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
        - -c
        - |
          set -euo pipefail
          url="https://s3.amazonaws.com/aws-cli/awscli-bundle.zip"
          wget --output aws-cli/awscli-bundle.zip "$url"
  - put: aws-cli-s3-release
    params: {file: aws-cli/awscli-bundle.zip}

- name: build-pcfops-image
  public: true
  serial: true
  plan:
  - aggregate:
    - get: pcfops-docker-tag
      params: {bump: minor}
    # Download Dockerfile
    - get: pcfops-github
      trigger: true
    # Trigger on base image updates
    - get: base-image
      trigger: true
    # Download dependancies
    - get: terraform-s3-release
      trigger: true
      passed: [get-terraform]
    - get: cf-cli-s3-release
      trigger: true
      passed: [get-cf-cli]
    - get: jq-github-release
      trigger: true
      params:
        globs: [jq-linux64]
    - get: om-github-release
      trigger: true
      params:
        globs: [om-linux]
    - get: concourse-github-release
      trigger: true
      params:
        globs: [fly_linux_amd64]
    - get: bosh-s3-release
      trigger: true
    - get: bbl-github-release
      trigger: true
      params:
        globs: [bbl-v*_linux_x86-64]
    - get: yaml-github-release
      trigger: true
      params:
        globs: [yq_linux_amd64]
    - get: golang-s3-release
      trigger: true
    - get: aws-cli-s3-release
      trigger: true
      passed: [get-aws-cli]
    - get: cf-uaac-github-release
      trigger: true # This is installed using gem within the docker image.
    - get: credhub-cli-github-release
      trigger: true
      params:
        globs: [credhub-linux-*.tgz]
    - get: certstrap-github-release
      trigger: true
      params:
        globs: [certstrap-v*-linux-amd64]
    - get: kubectl-s3-release
      trigger: true
      passed: [get-kubectl]
  # Copy dependencies
  - task: copy
    config:
      platform: linux
      inputs:
      - name: pcfops-github
      - name: terraform-s3-release
      - name: cf-cli-s3-release
      - name: jq-github-release
      - name: om-github-release
      - name: concourse-github-release
      - name: bosh-s3-release
      - name: bbl-github-release
      - name: yaml-github-release
      - name: golang-s3-release
      - name: aws-cli-s3-release
      - name: credhub-cli-github-release
      - name: certstrap-github-release
      - name: kubectl-s3-release
      outputs:
      - name: builddir
      image_resource:
        type: docker-image
        source: {repository: busybox}
      run:
        path: ash
        args:
          - -xeuc
          - |
            cp -r pcfops-github/. builddir/
            cp terraform-s3-release/terraform builddir/terraform
            cp cf-cli-s3-release/cf builddir/cf
            cp jq-github-release/jq-linux64 builddir/jq
            cp om-github-release/om-linux builddir/om
            cp concourse-github-release/fly_linux_amd64 builddir/fly
            cp bosh-s3-release/bosh-cli-*-linux-amd64 builddir/bosh
            cp bbl-github-release/bbl-v*_linux_x86-64 builddir/bbl
            cp yaml-github-release/yq_linux_amd64 builddir/yaml
            cp certstrap-github-release/certstrap-v*-linux-amd64 builddir/certstrap
            cp golang-s3-release/go*.linux-amd64.tar.gz builddir/go.tar.gz
            cp aws-cli-s3-release/awscli-bundle.zip builddir/awscli-bundle.zip
            tar -C builddir -xzf credhub-cli-github-release/credhub-linux-*.tgz
            cp kubectl-s3-release/kubectl builddir/kubectl
  - put: pcfops-image
    params:
      build: builddir
      tag: pcfops-docker-tag/version
      tag_as_latest: true
  - put: pcfops-docker-tag
    params: {file: pcfops-docker-tag/version}

resources:
- name: pcfops-docker-tag
  type: semver
  source:
    driver: s3
    key: docker-tag
    bucket: pcf-docker-pipeline
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: eu-west-1

- name: pcfops-github
  type: git
  source:
    uri: https://github.com/EngineerBetter/pcfops-docker.git
- name: pcfops-image
  type: docker-image
  source:
    username: ((dockerhub_user))
    password: ((dockerhub_password))
    repository: engineerbetter/pcf-ops

- name: terraform-github-release
  type: github-release
  source:
    owner: hashicorp
    repository: terraform
    access_token: ((github_access_token)) # Avoids rate limits
- name: terraform-s3-release
  type: s3
  source:
    versioned_file: terraform/terraform
    bucket: pcf-docker-pipeline
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: eu-west-1

- name: cf-cli-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cli
    access_token: ((github_access_token)) # Avoids rate limits
- name: cf-cli-s3-release
  type: s3
  source:
    versioned_file: cf/cf
    bucket: pcf-docker-pipeline
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: eu-west-1

- name: jq-github-release
  type: github-release
  source:
    owner: stedolan
    repository: jq
    access_token: ((github_access_token)) # Avoids rate limits

- name: om-github-release
  type: github-release
  source:
    owner: pivotal-cf
    repository: om
    access_token: ((github_access_token)) # Avoids rate limits

- name: concourse-github-release
  type: github-release
  source:
    owner: concourse
    repository: concourse
    access_token: ((github_access_token)) # Avoids rate limits

- name: bosh-s3-release
  type: s3
  source:
    bucket: bosh-cli-artifacts
    regexp: 'bosh-cli-(2\.\d+(\.\d+)?)-linux-amd64'

- name: bbl-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-bootloader
    access_token: ((github_access_token)) # Avoids rate limits

- name: yaml-github-release
  type: github-release
  source:
    owner: mikefarah
    repository: yq
    access_token: ((github_access_token)) # Avoids rate limits

- name: golang-s3-release
  type: s3
  source:
    endpoint: storage.googleapis.com
    bucket: golang
    regexp: 'go(1\.\d+(\.\d+)?)\.linux-amd64\.tar.gz'

- name: base-image
  type: docker-image
  source:
    repository: cloudfoundry/cflinuxfs2

- name: aws-cli-git
  type: git
  source:
    uri: https://github.com/aws/aws-cli.git
    tag_filter: 1.*.*
- name: aws-cli-s3-release
  type: s3
  source:
    versioned_file: aws-cli/awscli-bundle.zip
    bucket: pcf-docker-pipeline
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: eu-west-1

- name: cf-uaac-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: cf-uaac
    access_token: ((github_access_token)) # Avoids rate limits

- name: credhub-cli-github-release
  type: github-release
  source:
    owner: cloudfoundry-incubator
    repository: credhub-cli
    access_token: ((github_access_token)) # Avoids rate limits

- name: certstrap-github-release
  type: github-release
  source:
    owner: square
    repository: certstrap
    access_token: ((github_access_token))

- name: kubernetes-github-release
  type: github-release
  source:
    owner: kubernetes
    repository: kubernetes
    access_token: ((github_access_token))
- name: kubectl-s3-release
  type: s3
  source:
    versioned_file: kubectl/kubectl
    bucket: pcf-docker-pipeline
    access_key_id: ((aws_access_key_id))
    secret_access_key: ((aws_secret_access_key))
    region_name: eu-west-1
